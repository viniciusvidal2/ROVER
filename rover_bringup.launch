<launch>

    <!-- Arguments -->
    <arg name="SITL" default="false"/>
    <arg name="tgt_system" default="1"/>
    <arg name="tgt_component" default="1"/>
    <arg name="log_output" default="log"/>
    <arg name="fcu_protocol" default="v2.0"/>
    <arg name="respawn_mavros" default="false"/>
    <arg name="sending_t" default="0.5"/>
    <arg name="max_dist" default="1"/>
    <arg name="corridor_width" default="1.2"/>
    <arg name="turn_rate" default="30.0"/>

    <!-- Set fcu_url and gcs_url based on SITL flag -->
    <arg unless="$(arg SITL)" name="fcu_url" default="/dev/ttyACM0:57600"/>
    <arg unless="$(arg SITL)" name="gcs_url" default="udp://:14551@127.0.0.1:14551"/>
    <arg if="$(arg SITL)" name="fcu_url" default="tcp://127.0.0.1:5762"/>
    <arg if="$(arg SITL)" name="gcs_url" default="tcp://127.0.0.1:5763"/>
    
    <!-- Launch Mavros related node -->
	<include file="$(find mavros)/launch/node.launch">
        <arg name="pluginlists_yaml" value="$(find mig_obstacle_avoidance)/config/mavros/apm_pluginlists.yaml" />
        <arg name="config_yaml" value="$(find mig_obstacle_avoidance)/config/mavros/apm_config.yaml" />
        <arg name="fcu_url" value="$(arg fcu_url)" />
        <arg name="gcs_url" value="$(arg gcs_url)" />
        <arg name="tgt_system" value="$(arg tgt_system)" />
        <arg name="tgt_component" value="$(arg tgt_component)" />
        <arg name="log_output" value="$(arg log_output)" />
        <arg name="fcu_protocol" value="$(arg fcu_protocol)" />
        <arg name="respawn_mavros" value="$(arg respawn_mavros)" />
    </include>

    <!-- Launch driver nodes if not running SITL simulation -->
    <group unless="$(arg SITL)">
        <!-- Livox sensor - mid360-->
        <include file="$(find livox_ros_driver2)/launch/rviz_MID360.launch">
            <arg name="rviz_enable" value="false"/>
        </include>

        <!-- USB camera for herelink transmission -->
        <include file="$(find camera_transmitter)/launch/camera_transmitter.launch"/>

        <!-- Dynamixel controllers -->
        <include file="$(find dynamixel_controller)/launch/dynamixel_controller.launch"/>
    </group>

    <!-- FAST LIO for lidar odometry and mapping -->
    <include file="$(find fast_lio)/launch/mapping_mid360.launch">
        <arg name="rviz" value="false"/>
    </include>

    <!-- Livox filter -->
    <rosparam command="load" file="$(find livox_filter_mig)/config/params.yaml"/>
    <node name="filter_raw_cloud_node" pkg="livox_filter_mig" type="filter_raw_cloud_node" output="screen"/>

    <!-- Obstacle avoidance algorithm -->
    <node pkg="mig_obstacle_avoidance" type="obstacle_avoidance_sc_node.py" name="obstacle_avoidance_sc_node">
        <param name="sending_t" value="$(arg sending_t)"/>
        <param name="max_dist" value="$(arg max_dist)"/>
        <param name="corridor_width" value="$(arg corridor_width)"/>
        <param name="turn_rate" value="$(arg turn_rate)"/>
    </node>
    
</launch>
